<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nine.crm.mapper.GuaranteeMapper">

    <!-- 抽取 where条件 -->
    <sql id="base_where">
        <where>
            <if test="keyword != null">
                AND contract_sn LIKE CONCAT("%",#{keyword},"%")
            </if>
        </where>
    </sql>

    <!-- 抽取 关联查询字段 -->
    <sql id="base_cloumn">
        g.id AS g_id, g.sn AS g_sn, g.end_date, g.contract_sn,
        gi.id AS gi_id, gi.input_date, gi.details, gi.status, gi.guarantee_sn,
        co.id AS co_id, co.sn AS co_sn, co.signTime, co.customer_id, co.tenant_id,
        cu.id AS cu_id, cu.name,
        t.id AS t_id, t.companyName
    </sql>

    <!-- 抽取 JOIN -->
    <sql id="base_join">
        LEFT JOIN guaranteeitem gi ON g.sn = gi.guarantee_sn
        JOIN contract co ON g.contract_sn = co.sn
        JOIN customer cu ON co.customer_id = cu.id
        JOIN tenant t ON co.tenant_id = t.id
    </sql>

    <!-- 关联查询 -->
    <resultMap id="baseResultMap" type="cn.nine.crm.domain.Guarantee">
        <id column="g_id" property="id"/>
        <result column="g_sn" property="sn"/>
        <result column="end_date" property="endDate"/>

        <!-- 关联 合同 -->
        <association property="contract" javaType="cn.nine.crm.domain.Contract">
            <id column="co_id" property="id"/>
            <result column="co_sn" property="sn"/>
            <result column="signTime" property="signTime"/>
        </association>

        <!-- 关联 客户 -->
        <association property="contract.customer" javaType="cn.nine.crm.domain.Customer">
            <id column="cu_id" property="id"/>
            <result column="name" property="name"/>
        </association>

        <!-- 关联 租户-->
        <association property="contract.tenant" javaType="cn.nine.crm.domain.Tenant">
            <id column="t_id" property="id"/>
            <result column="companyName" property="companyName"/>
        </association>

        <!-- 关联 保修单明细 -->
        <collection property="guaranteeItemList" ofType="cn.nine.crm.domain.GuaranteeItem">
            <id column="gi_id" property="id"/>
            <result column="input_date" property="inputDate"/>
            <result column="details" property="details"/>
            <result column="status" property="status"/>
        </collection>

    </resultMap>

    <!-- 查询全部数据 -->
    <select id="findAll" resultMap="baseResultMap">
        SELECT
            <include refid="base_cloumn"/>
        FROM guarantee g
        <include refid="base_join"/>
        <include refid="base_where"/>
    </select>

    <!-- 分页查询 -->
    <select id="selectForPage" parameterType="cn.nine.crm.query.GuaranteeQuery" resultMap="baseResultMap">
        SELECT
            <include refid="base_cloumn"/>
        FROM guarantee g
        <include refid="base_join"/>
        <include refid="base_where"/>
        ORDER BY guarantee_sn ASC
        limit #{start},#{pageSize}
    </select>

    <!-- 查询数据条数 -->
    <select id="selectForCount" resultType="long">
        SELECT
            COUNT(*)
        FROM guarantee
        <include refid="base_where"/>
    </select>

    <!-- 查询单个数据 -->
    <select id="findOne" parameterType="long" resultType="cn.nine.crm.domain.Guarantee">
        SELECT
            <include refid="base_cloumn"/>
        FROM guarantee
        <include refid="base_join"/>
        WHERE id = #{id}
    </select>

    <!-- 新增数据 -->
    <insert id="save" parameterType="cn.nine.crm.domain.Guarantee"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO guarantee(
            sn,
            end_date,
            contract_sn
        )
        VALUES(
            #{sn},
            #{endDate},
            #{contract.sn}
        )
    </insert>

    <!-- 修改数据 -->
    <update id="update" parameterType="cn.nine.crm.domain.Guarantee">
        UPDATE guarantee
        SET
            end_date = #{endDate},
            contract_sn = #{contract.sn}
        WHERE id = #{id}
    </update>

    <!-- 删除单个数据 -->
    <delete id="delete" parameterType="long">
        DELETE
        FROM guarantee
        WHERE id = #{id}
    </delete>

    <!-- 删除多个数据 -->
    <delete id="batchDelete">
        <!--open最前面的字符,close在最后的字符separator分隔符,每次循环使用什么分隔-->
        DELETE
        FROM guarantee
        WHERE id IN
            <foreach collection="list" open="(" item="id" close=")" separator=",">
                #{id}
            </foreach>
    </delete>


</mapper>
