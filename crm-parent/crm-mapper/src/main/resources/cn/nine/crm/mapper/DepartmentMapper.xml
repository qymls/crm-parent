<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.nine.crm.mapper.DepartmentMapper">

    <select id="findAll" resultType="cn.nine.crm.domain.Department">
        select
            id,
            name ,
            sn
        from
            department
    </select>
    <resultMap id="baseMap" type="cn.nine.crm.domain.Department">
        <id column="d_id" property="id"/>
        <result column="name" property="name"/>
        <result column="sn" property="sn"/>
        <association property="parentId" javaType="cn.nine.crm.domain.Department">
            <id column="f_id" property="id"/>
            <result column="name" property="name"/>
        </association>
        <association property="manager"
                     javaType="cn.nine.crm.domain.Employee">
            <id column="e_id" property="id"/>
            <id column="realName" property="realName"/>
        </association>
    </resultMap>
    <select id="selectForPage" resultMap="baseMap">
        select
        d.id AS d_id,
        d.name,
        d.sn,
        d.manager,
        d.parent_id AS d_id,

        e.id AS e_id,
        e.realName,

        f.id AS f_id,
        f.name
        from
        department d
        LEFT JOIN  employee e ON d.manager= e.id
        LEFT JOIN department f ON  d.parent_id = f.id
        <include refid="base_where"/>
        LIMIT #{start} , #{pageSize}
    </select>

    <select id="selectForCount" resultType="long">
        select count(id) from department
        <include refid="base_where"/>
    </select>
    <!--抽取where-->
    <sql id="base_where">
        <where>
            <if test="keyword != null">
                and name like  CONCAT("%",#{keyword},"%")
            </if>
        </where>
    </sql>
    <select id="findOne" parameterType="long" resultType="cn.nine.crm.domain.Department">
        select
        id,
        name ,
        sn from department  where id = #{id}
    </select>
    <resultMap id="baseResultMap" type="cn.nine.crm.domain.Department">
            <id column="id" property="id"/>
            <result column="name" property="name"/>
            <result column="sn" property="sn"/>
            <!--发送子sql-->
        <collection property="children"
                    ofType="cn.nine.crm.domain.Department"
                    column="id"
                    select="cn.nine.crm.mapper.DepartmentMapper.findByParentId">
        </collection>
    </resultMap>
    <!--查询一级部门-->
    <select id="findTreeData" resultMap="baseResultMap">
          SELECT id,name FROM department WHERE parent_id IS NULL
    </select>
    <!--查询父部门下面的子部门-->
    <select id="findByParentId" resultMap="baseResultMap">
        SELECT id,name FROM department WHERE parent_id=#{id}
    </select>
    <!--新增-->
    <insert id="save" parameterType="cn.nine.crm.domain.Department"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        insert into department
        (name, sn,manager,parent_id)
        values
        (#{name},#{sn},#{manager.id},#{parentId.id})
    </insert>
    <update id="update" parameterType="cn.nine.crm.domain.Department">
        update department
                <set>
                    <if test="name !=null and name !=''">
                    name =#{name},
                    </if>
                    <if test="sn !=null and sn !=''">
                    sn =#{sn},
                    </if>
                    <if test="manager !=null and manager.id !=''">
                    manager=#{manager.id}
                    </if>
                    <if test="parentId != null and parentId.id !='">
                    parent_id=#{parentId.id}
                    </if>
                </set>
                where id = #{id}
    </update>
    <delete id="delete" parameterType="long">
        delete from department where id = #{id}
    </delete>
    <delete id="batchDelete">
        <!--open最前面的字符,close在最后的字符separator分隔符,每次循环使用什么分隔-->
        delete from department where id in
        <foreach collection="list" open="(" item="id" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>
